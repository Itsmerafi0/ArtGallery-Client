/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactImport } from './routes/contact'

// Create Virtual Routes

const ProductDetailLazyImport = createFileRoute('/productDetail')()
const ProductLazyImport = createFileRoute('/product')()
const OrderLazyImport = createFileRoute('/order')()
const GalleryDetailLazyImport = createFileRoute('/galleryDetail')()
const GalleryLazyImport = createFileRoute('/gallery')()
const EventDetailLazyImport = createFileRoute('/eventDetail')()
const EventLazyImport = createFileRoute('/event')()
const ArticlesLazyImport = createFileRoute('/articles')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ProductDetailLazyRoute = ProductDetailLazyImport.update({
  id: '/productDetail',
  path: '/productDetail',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/productDetail.lazy').then((d) => d.Route))

const ProductLazyRoute = ProductLazyImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/product.lazy').then((d) => d.Route))

const OrderLazyRoute = OrderLazyImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/order.lazy').then((d) => d.Route))

const GalleryDetailLazyRoute = GalleryDetailLazyImport.update({
  id: '/galleryDetail',
  path: '/galleryDetail',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/galleryDetail.lazy').then((d) => d.Route))

const GalleryLazyRoute = GalleryLazyImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/gallery.lazy').then((d) => d.Route))

const EventDetailLazyRoute = EventDetailLazyImport.update({
  id: '/eventDetail',
  path: '/eventDetail',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/eventDetail.lazy').then((d) => d.Route))

const EventLazyRoute = EventLazyImport.update({
  id: '/event',
  path: '/event',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/event.lazy').then((d) => d.Route))

const ArticlesLazyRoute = ArticlesLazyImport.update({
  id: '/articles',
  path: '/articles',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/articles.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/articles': {
      id: '/articles'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesLazyImport
      parentRoute: typeof rootRoute
    }
    '/event': {
      id: '/event'
      path: '/event'
      fullPath: '/event'
      preLoaderRoute: typeof EventLazyImport
      parentRoute: typeof rootRoute
    }
    '/eventDetail': {
      id: '/eventDetail'
      path: '/eventDetail'
      fullPath: '/eventDetail'
      preLoaderRoute: typeof EventDetailLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryLazyImport
      parentRoute: typeof rootRoute
    }
    '/galleryDetail': {
      id: '/galleryDetail'
      path: '/galleryDetail'
      fullPath: '/galleryDetail'
      preLoaderRoute: typeof GalleryDetailLazyImport
      parentRoute: typeof rootRoute
    }
    '/order': {
      id: '/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderLazyImport
      parentRoute: typeof rootRoute
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductLazyImport
      parentRoute: typeof rootRoute
    }
    '/productDetail': {
      id: '/productDetail'
      path: '/productDetail'
      fullPath: '/productDetail'
      preLoaderRoute: typeof ProductDetailLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/contact': typeof ContactRoute
  '/about': typeof AboutLazyRoute
  '/articles': typeof ArticlesLazyRoute
  '/event': typeof EventLazyRoute
  '/eventDetail': typeof EventDetailLazyRoute
  '/gallery': typeof GalleryLazyRoute
  '/galleryDetail': typeof GalleryDetailLazyRoute
  '/order': typeof OrderLazyRoute
  '/product': typeof ProductLazyRoute
  '/productDetail': typeof ProductDetailLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/contact': typeof ContactRoute
  '/about': typeof AboutLazyRoute
  '/articles': typeof ArticlesLazyRoute
  '/event': typeof EventLazyRoute
  '/eventDetail': typeof EventDetailLazyRoute
  '/gallery': typeof GalleryLazyRoute
  '/galleryDetail': typeof GalleryDetailLazyRoute
  '/order': typeof OrderLazyRoute
  '/product': typeof ProductLazyRoute
  '/productDetail': typeof ProductDetailLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/contact': typeof ContactRoute
  '/about': typeof AboutLazyRoute
  '/articles': typeof ArticlesLazyRoute
  '/event': typeof EventLazyRoute
  '/eventDetail': typeof EventDetailLazyRoute
  '/gallery': typeof GalleryLazyRoute
  '/galleryDetail': typeof GalleryDetailLazyRoute
  '/order': typeof OrderLazyRoute
  '/product': typeof ProductLazyRoute
  '/productDetail': typeof ProductDetailLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contact'
    | '/about'
    | '/articles'
    | '/event'
    | '/eventDetail'
    | '/gallery'
    | '/galleryDetail'
    | '/order'
    | '/product'
    | '/productDetail'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/contact'
    | '/about'
    | '/articles'
    | '/event'
    | '/eventDetail'
    | '/gallery'
    | '/galleryDetail'
    | '/order'
    | '/product'
    | '/productDetail'
  id:
    | '__root__'
    | '/'
    | '/contact'
    | '/about'
    | '/articles'
    | '/event'
    | '/eventDetail'
    | '/gallery'
    | '/galleryDetail'
    | '/order'
    | '/product'
    | '/productDetail'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ContactRoute: typeof ContactRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ArticlesLazyRoute: typeof ArticlesLazyRoute
  EventLazyRoute: typeof EventLazyRoute
  EventDetailLazyRoute: typeof EventDetailLazyRoute
  GalleryLazyRoute: typeof GalleryLazyRoute
  GalleryDetailLazyRoute: typeof GalleryDetailLazyRoute
  OrderLazyRoute: typeof OrderLazyRoute
  ProductLazyRoute: typeof ProductLazyRoute
  ProductDetailLazyRoute: typeof ProductDetailLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ContactRoute: ContactRoute,
  AboutLazyRoute: AboutLazyRoute,
  ArticlesLazyRoute: ArticlesLazyRoute,
  EventLazyRoute: EventLazyRoute,
  EventDetailLazyRoute: EventDetailLazyRoute,
  GalleryLazyRoute: GalleryLazyRoute,
  GalleryDetailLazyRoute: GalleryDetailLazyRoute,
  OrderLazyRoute: OrderLazyRoute,
  ProductLazyRoute: ProductLazyRoute,
  ProductDetailLazyRoute: ProductDetailLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/contact",
        "/about",
        "/articles",
        "/event",
        "/eventDetail",
        "/gallery",
        "/galleryDetail",
        "/order",
        "/product",
        "/productDetail"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/contact": {
      "filePath": "contact.jsx"
    },
    "/about": {
      "filePath": "about.lazy.jsx"
    },
    "/articles": {
      "filePath": "articles.lazy.jsx"
    },
    "/event": {
      "filePath": "event.lazy.jsx"
    },
    "/eventDetail": {
      "filePath": "eventDetail.lazy.jsx"
    },
    "/gallery": {
      "filePath": "gallery.lazy.jsx"
    },
    "/galleryDetail": {
      "filePath": "galleryDetail.lazy.jsx"
    },
    "/order": {
      "filePath": "order.lazy.jsx"
    },
    "/product": {
      "filePath": "product.lazy.jsx"
    },
    "/productDetail": {
      "filePath": "productDetail.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
